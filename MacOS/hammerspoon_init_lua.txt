-- cmd: ⌘
-- option: ⌥
-- control: ⌃
-- shift: ⇧

local hyper = {"⌥", "⌃", "⇧"}
local hypercmd = {"⌥", "⌃", "⇧", "cmd"}

local function pressFn(mods, key)
	if key == nil then
		key = mods
		mods = {}
	end

	return function() hs.eventtap.keyStroke(mods, key, 1000) end
end

local function remap(mods, key, pressFn)
	hs.hotkey.bind(mods, key, pressFn, nil, nil)
end

-- my hotkeys --------------

--remapNoRepeat(hyper, 'c', pressFn({'cmd'}, 'c')) -- copy

remap(hyper, '1', pressFn({}, 'f14'))

-- Send the date. Refer to lua.org/pil/22.1.html
hs.hotkey.bind(hypercmd, 't', function() hs.eventtap.keyStrokes(os.date("%Y-%m-%d")) end)

-- Send a fixed string
hs.hotkey.bind(hypercmd, 'n', function() hs.eventtap.keyStrokes("PAYE-") end)
hs.hotkey.bind( {"⌃", "⇧", "cmd"}, 'n', function() hs.eventtap.keyStrokes("PAYE-") end)
hs.hotkey.bind( {"cmd"}, 'p', function() hs.hid.capslock.toggle() end)

------------------ Application Shortcuts --------------
--[[
hs.hotkey.bind(hypercmd, "n", function()
 hs.application.launchOrFocus("Visual Studio Code")
end)
--]]
hs.hotkey.bind(hypercmd, "1", function()
 hs.application.launchOrFocus("Visual Studio Code")
end)

hs.hotkey.bind(hypercmd, "tab", function()
	hs.application.launchOrFocus("Visual Studio Code")
   end)

--[[
	hs.hotkey.bind(hypercmd, "m", function()
hs.application.launchOrFocus("Google Chrome")
end)
--]]
hs.hotkey.bind(hypercmd, "2", function()
 hs.application.launchOrFocus("Google Chrome")
end)

--[[
hs.hotkey.bind({"cmd"}, "3", function()
 hs.application.launchOrFocus("IntelliJ IDEA")
end)
--]]
hs.hotkey.bind(hypercmd, "3", function()
 hs.application.launchOrFocus("IntelliJ IDEA")
end)

--[[
hs.hotkey.bind({"cmd"}, "4", function()
 hs.application.launchOrFocus("Slack")
end)
--]]
hs.hotkey.bind(hypercmd, "4", function()
 hs.application.launchOrFocus("Slack")
end)

--[[
hs.hotkey.bind({"cmd"}, "5", function()
 hs.application.launchOrFocus("iTerm")
end)
--]]
hs.hotkey.bind(hypercmd, "5", function()
 hs.application.launchOrFocus("iTerm")
end)

hs.hotkey.bind(hypercmd, "6", function()
	hs.application.launchOrFocus("Firefox")
   end)

hs.hotkey.bind(hypercmd, "F2", function()
	hs.application.launchOrFocus("Microsoft Outlook")
   end)

hs.hotkey.bind(hypercmd, "F3", function()
	hs.application.launchOrFocus("zoom.us")
   end)

hs.hotkey.bind(hypercmd, "7", function()
	hs.application.launchOrFocus("/Applications/Postman.app/Contents/MacOS/Postman")
   end)

local function directoryLaunchKeyRemap(mods, key, dir)
    local mods = mods or {}
    hs.hotkey.bind(mods, key, function()
        local shell_command = "open " .. dir
        hs.execute(shell_command)
    end)
end

-- open Finder at the specified location
directoryLaunchKeyRemap(hypercmd, "r", "~/Desktop")

----------- Window Management ---------------
-- hyper up
hs.hotkey.bind(hypercmd, "up", function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y
    f.w = max.w
    f.h = max.h
    win:setFrame(f)
end)
-- hyper right
hs.hotkey.bind(hypercmd, "Right", function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x + (max.w / 2)
    f.y = max.y
    f.w = max.w / 2
    f.h = max.h
    win:setFrame(f)
end)
-- hyper left
hs.hotkey.bind(hypercmd, "Left", function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y
    f.w = max.w / 2
    f.h = max.h
    win:setFrame(f)
end)
-- hyper down
hs.hotkey.bind(hypercmd, "Down", function()
	local win = hs.window.focusedWindow()
	local f = win:frame()
	local screen = win:screen()
	local max = screen:frame()
	
	f.x = max.x + (max.w* 0.1)
	f.y = max.y
	f.w = max.w * 0.8
	f.h = max.h
	win:setFrame(f)
end)
-- hyper f12
hs.hotkey.bind(hypercmd, "f12", function()
	local win = hs.window.focusedWindow()
	local f = win:frame()
	local screen = win:screen()
	local max = screen:frame()
	
	f.x = max.x
	f.y = max.y + (max.h / 2)
	f.w = max.w
	f.h = max.h / 2
	win:setFrame(f)
end)
-- hyper f11
hs.hotkey.bind(hypercmd, "f11", function()
	local win = hs.window.focusedWindow()
	local f = win:frame()
	local screen = win:screen()
	local max = screen:frame()
	
	f.x = max.x
	f.y = max.y
	f.w = max.w
	f.h = max.h / 2
	win:setFrame(f)
end)
-- hyper end - change to 1/4 size of screen
hs.hotkey.bind(hypercmd, "end", function()
	local win = hs.window.focusedWindow()
	local f = win:frame()
	local screen = win:screen()
	local max = screen:frame()
	
	f.x = max.x + (max.w / 4)
	f.y = max.y + (max.h / 4)
	f.w = max.w / 2
	f.h = max.h / 2
	win:setFrame(f)
end)

-- hyper home - maximize vertically
hs.hotkey.bind(hypercmd, "home", function()
	local win = hs.window.focusedWindow()
	local f = win:frame()
	local screen = win:screen()
	local max = screen:frame()
	
		f.y = max.y
		f.h = max.h
	win:setFrame(f)
end)

